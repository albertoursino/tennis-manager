[tool.poetry]
name = "TennisManager"
version = "0.0.1"
description = "Tennis manager software for clubs."
authors = ["Alberto Ursino <albertoursino98@gmail.com>"]
license = "MIT License"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.11.*"
django = "^5.1.1"
poethepoet = "^0.28.0"
python-dotenv = "^1.0.1"
pre-commit = "^3.8.0"
django-livereload-server = "^0.5.1"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
# Same as Black.
line-length = 120
indent-width = 4
# Assume Python 3.8
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D104", # Missing docstring in public package
    "D100", #Missing docstring in public module
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tennis_manager/app/migrations/*" = ["ALL"]
"tennis_manager/manage.py" = ["ALL"]

[tool.poe.tasks]
# Django
runserver = "python tennis_manager/manage.py runserver 8002 --settings=tennis_manager.settings_dev"
migrate = "python tennis_manager/manage.py migrate"
makemigrations = "python tennis_manager/manage.py makemigrations"
createsuperuser = "python tennis_manager/manage.py createsuperuser"
collect = "python tennis_manager/manage.py collectstatic"
# pre-commit
runall = "pre-commit run --all-files"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
